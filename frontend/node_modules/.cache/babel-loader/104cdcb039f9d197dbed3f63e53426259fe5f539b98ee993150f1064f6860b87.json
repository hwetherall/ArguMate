{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hweth\\\\OneDrive\\\\Desktop\\\\Innovera\\\\Rapid Prototyping\\\\ArguMate\\\\frontend\\\\src\\\\components\\\\ClaimsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClaimsList({\n  claims,\n  onSelectClaim,\n  onAddManualEvidence,\n  onAskAI,\n  onAskDocuments\n}) {\n  _s();\n  const [selectedClaimId, setSelectedClaimId] = useState(null);\n  const [manualEvidence, setManualEvidence] = useState('');\n  const handleSubmitManualEvidence = claimId => {\n    if (manualEvidence.trim()) {\n      onAddManualEvidence(claimId, manualEvidence);\n      setManualEvidence('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"claims-list\",\n    children: claims.map(claim => {\n      var _claim$evidence;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"claim-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: claim.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"evidence-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: selectedClaimId === claim.id ? manualEvidence : '',\n            onChange: e => setManualEvidence(e.target.value),\n            placeholder: \"Enter manual evidence...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSubmitManualEvidence(claim.id),\n            children: \"Add Manual Evidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onAskAI(claim.id),\n            children: \"Ask AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onAskDocuments(claim.id),\n            children: \"Ask Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"evidence-list\",\n          children: (_claim$evidence = claim.evidence) === null || _claim$evidence === void 0 ? void 0 : _claim$evidence.map((evidence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `evidence-item ${evidence.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: evidence.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"evidence-type\",\n              children: evidence.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, claim.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ClaimsList, \"hRxOJp3ZMNIugv3ow32NrbTbz4Q=\");\n_c = ClaimsList;\nexport default ClaimsList;\nvar _c;\n$RefreshReg$(_c, \"ClaimsList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ClaimsList","claims","onSelectClaim","onAddManualEvidence","onAskAI","onAskDocuments","_s","selectedClaimId","setSelectedClaimId","manualEvidence","setManualEvidence","handleSubmitManualEvidence","claimId","trim","className","children","map","claim","_claim$evidence","text","fileName","_jsxFileName","lineNumber","columnNumber","value","id","onChange","e","target","placeholder","onClick","evidence","index","type","content","_c","$RefreshReg$"],"sources":["C:/Users/hweth/OneDrive/Desktop/Innovera/Rapid Prototyping/ArguMate/frontend/src/components/ClaimsList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ClaimsList({ claims, onSelectClaim, onAddManualEvidence, onAskAI, onAskDocuments }) {\r\n  const [selectedClaimId, setSelectedClaimId] = useState(null);\r\n  const [manualEvidence, setManualEvidence] = useState('');\r\n\r\n  const handleSubmitManualEvidence = (claimId) => {\r\n    if (manualEvidence.trim()) {\r\n      onAddManualEvidence(claimId, manualEvidence);\r\n      setManualEvidence('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"claims-list\">\r\n      {claims.map(claim => (\r\n        <div key={claim.id} className=\"claim-item\">\r\n          <h3>{claim.text}</h3>\r\n          \r\n          <div className=\"evidence-actions\">\r\n            <textarea\r\n              value={selectedClaimId === claim.id ? manualEvidence : ''}\r\n              onChange={(e) => setManualEvidence(e.target.value)}\r\n              placeholder=\"Enter manual evidence...\"\r\n            />\r\n            <button onClick={() => handleSubmitManualEvidence(claim.id)}>\r\n              Add Manual Evidence\r\n            </button>\r\n            <button onClick={() => onAskAI(claim.id)}>\r\n              Ask AI\r\n            </button>\r\n            <button onClick={() => onAskDocuments(claim.id)}>\r\n              Ask Documents\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"evidence-list\">\r\n            {claim.evidence?.map((evidence, index) => (\r\n              <div key={index} className={`evidence-item ${evidence.type}`}>\r\n                <p>{evidence.content}</p>\r\n                <span className=\"evidence-type\">{evidence.type}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ClaimsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}