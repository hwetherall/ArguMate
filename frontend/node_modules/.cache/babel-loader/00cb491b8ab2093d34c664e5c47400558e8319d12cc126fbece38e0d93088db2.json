{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hweth\\\\OneDrive\\\\Desktop\\\\Innovera\\\\Rapid Prototyping\\\\ArguMate\\\\frontend\\\\src\\\\pages\\\\ClaimsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Paper, Box, Typography, CircularProgress } from '@mui/material';\nimport { generateClaims, getAIEvidence, getDocumentEvidence, uploadDocument } from '../services/apiClient';\nimport ClaimsList from '../components/ClaimsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClaimsPage() {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [problemStatement, setProblemStatement] = useState('');\n  const [productDescription, setProductDescription] = useState('');\n  const [claims, setClaims] = useState([]);\n  const [documents, setDocuments] = useState([]);\n\n  // Fixed claims that are always present\n  const fixedClaims = [{\n    id: 'market-size',\n    text: 'The target market for this product is sufficiently large',\n    type: 'fixed',\n    evidence: []\n  }, {\n    id: 'market-growth',\n    text: 'The target market is growing at a significant rate',\n    type: 'fixed',\n    evidence: []\n  }];\n  const handleGenerateClaims = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const generatedClaims = await generateClaims(problemStatement, productDescription);\n\n      // Ensure generatedClaims is an array\n      const claimsArray = Array.isArray(generatedClaims) ? generatedClaims : [generatedClaims];\n\n      // Combine fixed claims with generated claims\n      setClaims([...fixedClaims, ...claimsArray.map((claim, index) => ({\n        id: `generated-${index}`,\n        text: typeof claim === 'string' ? claim : claim.text || 'Invalid claim',\n        type: 'generated',\n        evidence: []\n      }))]);\n    } catch (error) {\n      alert('Failed to generate claims. Please try again.');\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddManualEvidence = (claimId, evidence) => {\n    setClaims(claims.map(claim => claim.id === claimId ? {\n      ...claim,\n      evidence: [...(claim.evidence || []), {\n        type: 'manual',\n        content: evidence\n      }]\n    } : claim));\n  };\n  const handleAskAI = async claimId => {\n    setLoading(true);\n    try {\n      const claim = claims.find(c => c.id === claimId);\n      const evidence = await getAIEvidence(claim.text, {\n        problemStatement,\n        productDescription\n      });\n      setClaims(claims.map(c => c.id === claimId ? {\n        ...c,\n        evidence: [...(c.evidence || []), {\n          type: 'ai',\n          content: evidence\n        }]\n      } : c));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    try {\n      const uploadedDoc = await uploadDocument(file);\n      setDocuments([...documents, uploadedDoc]);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleAskDocuments = async claimId => {\n    if (documents.length === 0) {\n      alert('Please upload documents first');\n      return;\n    }\n    setLoading(true);\n    try {\n      const claim = claims.find(c => c.id === claimId);\n      const evidence = await getDocumentEvidence(claim.text, documents.map(d => d.id));\n      setClaims(claims.map(c => c.id === claimId ? {\n        ...c,\n        evidence: [...(c.evidence || []), {\n          type: 'document',\n          content: evidence\n        }]\n      } : c));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProceedToSummary = () => {\n    // Check if all claims have evidence\n    const allClaimsHaveEvidence = claims.every(claim => claim.evidence && claim.evidence.length > 0);\n    if (allClaimsHaveEvidence) {\n      navigate('/summary', {\n        state: {\n          claims\n        }\n      });\n    } else {\n      alert('Please provide evidence for all claims before proceeding');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [claims.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Define Your Innovation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleGenerateClaims,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Problem Statement\",\n          value: problemStatement,\n          onChange: e => setProblemStatement(e.target.value),\n          required: true,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Product Description\",\n          value: productDescription,\n          onChange: e => setProductDescription(e.target.value),\n          required: true,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          disabled: loading,\n          sx: {\n            minWidth: 200\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 26\n          }, this) : 'Generate Claims'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Claims Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(ClaimsList, {\n          claims: claims,\n          onAddManualEvidence: handleAddManualEvidence,\n          onAskAI: handleAskAI,\n          onAskDocuments: handleAskDocuments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            bgcolor: '#f5f5f5',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Upload Supporting Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"label\",\n            sx: {\n              mr: 2\n            },\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              hidden: true,\n              accept: \".pdf,.csv\",\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), documents.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [documents.length, \" document(s) uploaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleProceedToSummary,\n            disabled: loading || !claims.every(claim => {\n              var _claim$evidence;\n              return ((_claim$evidence = claim.evidence) === null || _claim$evidence === void 0 ? void 0 : _claim$evidence.length) > 0;\n            }),\n            size: \"large\",\n            children: \"Proceed to Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(ClaimsPage, \"v89SQnZ3fv2kYILFGT92SUdWBV4=\", false, function () {\n  return [useNavigate];\n});\n_c = ClaimsPage;\nexport default ClaimsPage;\nvar _c;\n$RefreshReg$(_c, \"ClaimsPage\");","map":{"version":3,"names":["React","useState","useNavigate","Container","TextField","Button","Paper","Box","Typography","CircularProgress","generateClaims","getAIEvidence","getDocumentEvidence","uploadDocument","ClaimsList","jsxDEV","_jsxDEV","ClaimsPage","_s","navigate","loading","setLoading","problemStatement","setProblemStatement","productDescription","setProductDescription","claims","setClaims","documents","setDocuments","fixedClaims","id","text","type","evidence","handleGenerateClaims","e","preventDefault","generatedClaims","claimsArray","Array","isArray","map","claim","index","error","alert","console","handleAddManualEvidence","claimId","content","handleAskAI","find","c","message","handleFileUpload","event","file","target","files","uploadedDoc","handleAskDocuments","length","d","handleProceedToSummary","allClaimsHaveEvidence","every","state","maxWidth","sx","py","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","multiline","rows","label","value","onChange","required","mb","size","disabled","minWidth","onAddManualEvidence","onAskAI","onAskDocuments","mt","bgcolor","borderRadius","component","mr","hidden","accept","color","display","justifyContent","onClick","_claim$evidence","_c","$RefreshReg$"],"sources":["C:/Users/hweth/OneDrive/Desktop/Innovera/Rapid Prototyping/ArguMate/frontend/src/pages/ClaimsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  Container, \r\n  TextField, \r\n  Button, \r\n  Paper, \r\n  Box, \r\n  Typography,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { generateClaims, getAIEvidence, getDocumentEvidence, uploadDocument } from '../services/apiClient';\r\nimport ClaimsList from '../components/ClaimsList';\r\n\r\nfunction ClaimsPage() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [problemStatement, setProblemStatement] = useState('');\r\n  const [productDescription, setProductDescription] = useState('');\r\n  const [claims, setClaims] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  // Fixed claims that are always present\r\n  const fixedClaims = [\r\n    {\r\n      id: 'market-size',\r\n      text: 'The target market for this product is sufficiently large',\r\n      type: 'fixed',\r\n      evidence: []\r\n    },\r\n    {\r\n      id: 'market-growth',\r\n      text: 'The target market is growing at a significant rate',\r\n      type: 'fixed',\r\n      evidence: []\r\n    }\r\n  ];\r\n\r\n  const handleGenerateClaims = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const generatedClaims = await generateClaims(problemStatement, productDescription);\r\n      \r\n      // Ensure generatedClaims is an array\r\n      const claimsArray = Array.isArray(generatedClaims) \r\n        ? generatedClaims \r\n        : [generatedClaims];\r\n\r\n      // Combine fixed claims with generated claims\r\n      setClaims([\r\n        ...fixedClaims,\r\n        ...claimsArray.map((claim, index) => ({\r\n          id: `generated-${index}`,\r\n          text: typeof claim === 'string' ? claim : claim.text || 'Invalid claim',\r\n          type: 'generated',\r\n          evidence: []\r\n        }))\r\n      ]);\r\n    } catch (error) {\r\n      alert('Failed to generate claims. Please try again.');\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddManualEvidence = (claimId, evidence) => {\r\n    setClaims(claims.map(claim => \r\n      claim.id === claimId \r\n        ? { ...claim, evidence: [...(claim.evidence || []), { type: 'manual', content: evidence }] }\r\n        : claim\r\n    ));\r\n  };\r\n\r\n  const handleAskAI = async (claimId) => {\r\n    setLoading(true);\r\n    try {\r\n      const claim = claims.find(c => c.id === claimId);\r\n      const evidence = await getAIEvidence(claim.text, { \r\n        problemStatement, \r\n        productDescription \r\n      });\r\n      \r\n      setClaims(claims.map(c => \r\n        c.id === claimId \r\n          ? { ...c, evidence: [...(c.evidence || []), { type: 'ai', content: evidence }] }\r\n          : c\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    try {\r\n      const uploadedDoc = await uploadDocument(file);\r\n      setDocuments([...documents, uploadedDoc]);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAskDocuments = async (claimId) => {\r\n    if (documents.length === 0) {\r\n      alert('Please upload documents first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const claim = claims.find(c => c.id === claimId);\r\n      const evidence = await getDocumentEvidence(claim.text, documents.map(d => d.id));\r\n      \r\n      setClaims(claims.map(c => \r\n        c.id === claimId \r\n          ? { ...c, evidence: [...(c.evidence || []), { type: 'document', content: evidence }] }\r\n          : c\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProceedToSummary = () => {\r\n    // Check if all claims have evidence\r\n    const allClaimsHaveEvidence = claims.every(claim => \r\n      claim.evidence && claim.evidence.length > 0\r\n    );\r\n\r\n    if (allClaimsHaveEvidence) {\r\n      navigate('/summary', { state: { claims } });\r\n    } else {\r\n      alert('Please provide evidence for all claims before proceeding');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      {claims.length === 0 ? (\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Define Your Innovation\r\n          </Typography>\r\n          <form onSubmit={handleGenerateClaims}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              label=\"Problem Statement\"\r\n              value={problemStatement}\r\n              onChange={(e) => setProblemStatement(e.target.value)}\r\n              required\r\n              sx={{ mb: 3 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              label=\"Product Description\"\r\n              value={productDescription}\r\n              onChange={(e) => setProductDescription(e.target.value)}\r\n              required\r\n              sx={{ mb: 3 }}\r\n            />\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"contained\" \r\n              size=\"large\"\r\n              disabled={loading}\r\n              sx={{ minWidth: 200 }}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : 'Generate Claims'}\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      ) : (\r\n        <Box>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Claims Analysis\r\n          </Typography>\r\n          <Paper elevation={3} sx={{ p: 4, mb: 3 }}>\r\n            <ClaimsList\r\n              claims={claims}\r\n              onAddManualEvidence={handleAddManualEvidence}\r\n              onAskAI={handleAskAI}\r\n              onAskDocuments={handleAskDocuments}\r\n            />\r\n            \r\n            <Box sx={{ mt: 3, p: 2, bgcolor: '#f5f5f5', borderRadius: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Upload Supporting Documents\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                sx={{ mr: 2 }}\r\n              >\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\".pdf,.csv\"\r\n                  onChange={handleFileUpload}\r\n                />\r\n              </Button>\r\n              {documents.length > 0 && (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {documents.length} document(s) uploaded\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button \r\n                variant=\"contained\"\r\n                onClick={handleProceedToSummary}\r\n                disabled={loading || !claims.every(claim => claim.evidence?.length > 0)}\r\n                size=\"large\"\r\n              >\r\n                Proceed to Summary\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ClaimsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}