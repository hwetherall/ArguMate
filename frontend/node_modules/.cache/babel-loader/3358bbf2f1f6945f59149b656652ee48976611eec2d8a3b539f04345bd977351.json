{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hweth\\\\OneDrive\\\\Desktop\\\\Innovera\\\\Rapid Prototyping\\\\ArguMate\\\\frontend\\\\src\\\\pages\\\\ClaimsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Paper, Box, Typography, CircularProgress } from '@mui/material';\nimport { generateClaims, getAIEvidence, getDocumentEvidence, uploadDocument } from '../services/apiClient';\nimport ClaimsList from '../components/ClaimsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClaimsPage() {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [problemStatement, setProblemStatement] = useState('The decline in the working population is an unavoidable social challenge, and robotics is seen as the only solution to sustain and grow current economic activities. With the rapid advancement of AI technology, robots are increasingly capable of handling more tasks. As a first step, we focus on QUGV for inspection, detection, and security tasks in harsh environments and aim to accelerate DX across industries.');\n  const [productDescription, setProductDescription] = useState('Q-UGV with various payloads provides efficient and effective operation for security, inspection, safety management, etc. The dustproof and waterproof performance, among other features, is reliable due to its proven use by the U.S. military etc.');\n  const [claims, setClaims] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const handleGenerateClaims = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const generatedClaims = await generateClaims(problemStatement, productDescription);\n\n      // Ensure generatedClaims is an array\n      const claimsArray = Array.isArray(generatedClaims) ? generatedClaims : [generatedClaims];\n\n      // Map all claims directly (remove the fixedClaims concatenation)\n      setClaims(claimsArray.map((claim, index) => ({\n        id: `claim-${index}`,\n        text: typeof claim === 'string' ? claim : claim.text || 'Invalid claim',\n        type: 'generated',\n        evidence: []\n      })));\n    } catch (error) {\n      alert('Failed to generate claims. Please try again.');\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddManualEvidence = (claimId, evidence) => {\n    setClaims(claims.map(claim => claim.id === claimId ? {\n      ...claim,\n      evidence: [...(claim.evidence || []), {\n        type: 'manual',\n        content: evidence\n      }]\n    } : claim));\n  };\n  const handleAskAI = async claimId => {\n    setLoading(true);\n    try {\n      const claim = claims.find(c => c.id === claimId);\n      const evidence = await getAIEvidence(claim.text, problemStatement, productDescription);\n      setClaims(claims.map(c => c.id === claimId ? {\n        ...c,\n        evidence: [...(c.evidence || []), {\n          type: 'ai',\n          content: evidence\n        }]\n      } : c));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    try {\n      const uploadedDoc = await uploadDocument(file);\n      setDocuments([...documents, uploadedDoc]);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleAskDocuments = async claimId => {\n    if (documents.length === 0) {\n      alert('Please upload documents first');\n      return;\n    }\n    setLoading(true);\n    try {\n      const claim = claims.find(c => c.id === claimId);\n      const evidence = await getDocumentEvidence(claim.text, documents.map(d => d.id));\n      setClaims(claims.map(c => c.id === claimId ? {\n        ...c,\n        evidence: [...(c.evidence || []), {\n          type: 'document',\n          content: evidence\n        }]\n      } : c));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProceedToSummary = () => {\n    // Check if all claims have evidence\n    const allClaimsHaveEvidence = claims.every(claim => claim.evidence && claim.evidence.length > 0);\n    if (allClaimsHaveEvidence) {\n      navigate('/summary', {\n        state: {\n          claims\n        }\n      });\n    } else {\n      alert('Please provide evidence for all claims before proceeding');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [claims.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Define Your Innovation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleGenerateClaims,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Problem Statement\",\n          value: problemStatement,\n          onChange: e => setProblemStatement(e.target.value),\n          required: true,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Product Description\",\n          value: productDescription,\n          onChange: e => setProductDescription(e.target.value),\n          required: true,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          disabled: loading,\n          sx: {\n            minWidth: 200\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 26\n          }, this) : 'Generate Claims'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Claims Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(ClaimsList, {\n          claims: claims,\n          onAddManualEvidence: handleAddManualEvidence,\n          onAskAI: handleAskAI,\n          onAskDocuments: handleAskDocuments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            bgcolor: '#f5f5f5',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Upload Supporting Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"label\",\n            sx: {\n              mr: 2\n            },\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              hidden: true,\n              accept: \".pdf,.csv\",\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), documents.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [documents.length, \" document(s) uploaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleProceedToSummary,\n            disabled: loading || !claims.every(claim => {\n              var _claim$evidence;\n              return ((_claim$evidence = claim.evidence) === null || _claim$evidence === void 0 ? void 0 : _claim$evidence.length) > 0;\n            }),\n            size: \"large\",\n            children: \"Proceed to Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(ClaimsPage, \"e2boqq+7O2E1PGyY3jlmdcvPDjk=\", false, function () {\n  return [useNavigate];\n});\n_c = ClaimsPage;\nexport default ClaimsPage;\nvar _c;\n$RefreshReg$(_c, \"ClaimsPage\");","map":{"version":3,"names":["React","useState","useNavigate","Container","TextField","Button","Paper","Box","Typography","CircularProgress","generateClaims","getAIEvidence","getDocumentEvidence","uploadDocument","ClaimsList","jsxDEV","_jsxDEV","ClaimsPage","_s","navigate","loading","setLoading","problemStatement","setProblemStatement","productDescription","setProductDescription","claims","setClaims","documents","setDocuments","handleGenerateClaims","e","preventDefault","generatedClaims","claimsArray","Array","isArray","map","claim","index","id","text","type","evidence","error","alert","console","handleAddManualEvidence","claimId","content","handleAskAI","find","c","message","handleFileUpload","event","file","target","files","uploadedDoc","handleAskDocuments","length","d","handleProceedToSummary","allClaimsHaveEvidence","every","state","maxWidth","sx","py","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","fullWidth","multiline","rows","label","value","onChange","required","mb","size","disabled","minWidth","onAddManualEvidence","onAskAI","onAskDocuments","mt","bgcolor","borderRadius","component","mr","hidden","accept","color","display","justifyContent","onClick","_claim$evidence","_c","$RefreshReg$"],"sources":["C:/Users/hweth/OneDrive/Desktop/Innovera/Rapid Prototyping/ArguMate/frontend/src/pages/ClaimsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  Container, \r\n  TextField, \r\n  Button, \r\n  Paper, \r\n  Box, \r\n  Typography,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { generateClaims, getAIEvidence, getDocumentEvidence, uploadDocument } from '../services/apiClient';\r\nimport ClaimsList from '../components/ClaimsList';\r\n\r\nfunction ClaimsPage() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [problemStatement, setProblemStatement] = useState(\r\n    'The decline in the working population is an unavoidable social challenge, and robotics is seen as the only solution to sustain and grow current economic activities. With the rapid advancement of AI technology, robots are increasingly capable of handling more tasks. As a first step, we focus on QUGV for inspection, detection, and security tasks in harsh environments and aim to accelerate DX across industries.'\r\n  );\r\n  const [productDescription, setProductDescription] = useState(\r\n    'Q-UGV with various payloads provides efficient and effective operation for security, inspection, safety management, etc. The dustproof and waterproof performance, among other features, is reliable due to its proven use by the U.S. military etc.'\r\n  );\r\n  const [claims, setClaims] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  const handleGenerateClaims = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const generatedClaims = await generateClaims(problemStatement, productDescription);\r\n      \r\n      // Ensure generatedClaims is an array\r\n      const claimsArray = Array.isArray(generatedClaims) \r\n        ? generatedClaims \r\n        : [generatedClaims];\r\n\r\n      // Map all claims directly (remove the fixedClaims concatenation)\r\n      setClaims(\r\n        claimsArray.map((claim, index) => ({\r\n          id: `claim-${index}`,\r\n          text: typeof claim === 'string' ? claim : claim.text || 'Invalid claim',\r\n          type: 'generated',\r\n          evidence: []\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      alert('Failed to generate claims. Please try again.');\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddManualEvidence = (claimId, evidence) => {\r\n    setClaims(claims.map(claim => \r\n      claim.id === claimId \r\n        ? { ...claim, evidence: [...(claim.evidence || []), { type: 'manual', content: evidence }] }\r\n        : claim\r\n    ));\r\n  };\r\n\r\n  const handleAskAI = async (claimId) => {\r\n    setLoading(true);\r\n    try {\r\n      const claim = claims.find(c => c.id === claimId);\r\n      const evidence = await getAIEvidence(claim.text, problemStatement, productDescription);\r\n      \r\n      setClaims(claims.map(c => \r\n        c.id === claimId \r\n          ? { ...c, evidence: [...(c.evidence || []), { type: 'ai', content: evidence }] }\r\n          : c\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    try {\r\n      const uploadedDoc = await uploadDocument(file);\r\n      setDocuments([...documents, uploadedDoc]);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAskDocuments = async (claimId) => {\r\n    if (documents.length === 0) {\r\n      alert('Please upload documents first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const claim = claims.find(c => c.id === claimId);\r\n      const evidence = await getDocumentEvidence(claim.text, documents.map(d => d.id));\r\n      \r\n      setClaims(claims.map(c => \r\n        c.id === claimId \r\n          ? { ...c, evidence: [...(c.evidence || []), { type: 'document', content: evidence }] }\r\n          : c\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProceedToSummary = () => {\r\n    // Check if all claims have evidence\r\n    const allClaimsHaveEvidence = claims.every(claim => \r\n      claim.evidence && claim.evidence.length > 0\r\n    );\r\n\r\n    if (allClaimsHaveEvidence) {\r\n      navigate('/summary', { state: { claims } });\r\n    } else {\r\n      alert('Please provide evidence for all claims before proceeding');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      {claims.length === 0 ? (\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Define Your Innovation\r\n          </Typography>\r\n          <form onSubmit={handleGenerateClaims}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              label=\"Problem Statement\"\r\n              value={problemStatement}\r\n              onChange={(e) => setProblemStatement(e.target.value)}\r\n              required\r\n              sx={{ mb: 3 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              label=\"Product Description\"\r\n              value={productDescription}\r\n              onChange={(e) => setProductDescription(e.target.value)}\r\n              required\r\n              sx={{ mb: 3 }}\r\n            />\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"contained\" \r\n              size=\"large\"\r\n              disabled={loading}\r\n              sx={{ minWidth: 200 }}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : 'Generate Claims'}\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      ) : (\r\n        <Box>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Claims Analysis\r\n          </Typography>\r\n          <Paper elevation={3} sx={{ p: 4, mb: 3 }}>\r\n            <ClaimsList\r\n              claims={claims}\r\n              onAddManualEvidence={handleAddManualEvidence}\r\n              onAskAI={handleAskAI}\r\n              onAskDocuments={handleAskDocuments}\r\n            />\r\n            \r\n            <Box sx={{ mt: 3, p: 2, bgcolor: '#f5f5f5', borderRadius: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Upload Supporting Documents\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                sx={{ mr: 2 }}\r\n              >\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\".pdf,.csv\"\r\n                  onChange={handleFileUpload}\r\n                />\r\n              </Button>\r\n              {documents.length > 0 && (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {documents.length} document(s) uploaded\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button \r\n                variant=\"contained\"\r\n                onClick={handleProceedToSummary}\r\n                disabled={loading || !claims.every(claim => claim.evidence?.length > 0)}\r\n                size=\"large\"\r\n              >\r\n                Proceed to Summary\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ClaimsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}