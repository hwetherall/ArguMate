{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hweth\\\\OneDrive\\\\Desktop\\\\Innovera\\\\Rapid Prototyping\\\\ArguMate\\\\frontend\\\\src\\\\components\\\\ClaimsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Paper, Typography, Divider, Chip, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ClaimsList({\n  claims,\n  onAddManualEvidence,\n  onAskAI,\n  onAskDocuments\n}) {\n  _s();\n  const [manualEvidence, setManualEvidence] = useState('');\n  const [loadingClaimId, setLoadingClaimId] = useState(null);\n  const handleSubmitManualEvidence = claimId => {\n    if (manualEvidence.trim()) {\n      onAddManualEvidence(claimId, manualEvidence);\n      setManualEvidence('');\n    }\n  };\n  const handleAskAI = async claimId => {\n    setLoadingClaimId(claimId);\n    await onAskAI(claimId);\n    setLoadingClaimId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"claims-list\",\n    children: claims.map(claim => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        p: 3,\n        mb: 3,\n        bgcolor: claim.type === 'fixed' ? '#f8f9fa' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: claim.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          variant: \"outlined\",\n          value: manualEvidence,\n          onChange: e => setManualEvidence(e.target.value),\n          placeholder: \"Enter manual evidence...\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => handleSubmitManualEvidence(claim.id),\n            children: \"Add Manual Evidence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => handleAskAI(claim.id),\n            disabled: loadingClaimId === claim.id,\n            startIcon: loadingClaimId === claim.id ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 58\n            }, this) : null,\n            children: loadingClaimId === claim.id ? 'AI Thinking...' : 'Ask AI'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => onAskDocuments(claim.id),\n            children: \"Ask Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), claim.evidence && claim.evidence.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Evidence:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2\n          },\n          children: claim.evidence.map((evidence, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              bgcolor: '#f5f5f5',\n              borderRadius: 1,\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: evidence.type,\n              size: \"small\",\n              sx: {\n                position: 'absolute',\n                top: 8,\n                right: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: evidence.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, claim.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ClaimsList, \"oufDHUlobRiGJkhUEnZN7ctDSA8=\");\n_c = ClaimsList;\nexport default ClaimsList;\nvar _c;\n$RefreshReg$(_c, \"ClaimsList\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Paper","Typography","Divider","Chip","CircularProgress","jsxDEV","_jsxDEV","Fragment","_Fragment","ClaimsList","claims","onAddManualEvidence","onAskAI","onAskDocuments","_s","manualEvidence","setManualEvidence","loadingClaimId","setLoadingClaimId","handleSubmitManualEvidence","claimId","trim","handleAskAI","className","children","map","claim","elevation","sx","p","mb","bgcolor","type","variant","gutterBottom","text","fileName","_jsxFileName","lineNumber","columnNumber","my","fullWidth","multiline","rows","value","onChange","e","target","placeholder","display","gap","onClick","id","disabled","startIcon","size","evidence","length","flexDirection","index","borderRadius","position","label","top","right","content","_c","$RefreshReg$"],"sources":["C:/Users/hweth/OneDrive/Desktop/Innovera/Rapid Prototyping/ArguMate/frontend/src/components/ClaimsList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Typography,\r\n  Divider,\r\n  Chip,\r\n  CircularProgress\r\n} from '@mui/material';\r\n\r\nfunction ClaimsList({ claims, onAddManualEvidence, onAskAI, onAskDocuments }) {\r\n  const [manualEvidence, setManualEvidence] = useState('');\r\n  const [loadingClaimId, setLoadingClaimId] = useState(null);\r\n\r\n  const handleSubmitManualEvidence = (claimId) => {\r\n    if (manualEvidence.trim()) {\r\n      onAddManualEvidence(claimId, manualEvidence);\r\n      setManualEvidence('');\r\n    }\r\n  };\r\n\r\n  const handleAskAI = async (claimId) => {\r\n    setLoadingClaimId(claimId);\r\n    await onAskAI(claimId);\r\n    setLoadingClaimId(null);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"claims-list\">\r\n      {claims.map(claim => (\r\n        <Paper \r\n          key={claim.id} \r\n          elevation={2} \r\n          sx={{ \r\n            p: 3, \r\n            mb: 3,\r\n            bgcolor: claim.type === 'fixed' ? '#f8f9fa' : 'white'\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {claim.text}\r\n          </Typography>\r\n          \r\n          <Box sx={{ my: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              variant=\"outlined\"\r\n              value={manualEvidence}\r\n              onChange={(e) => setManualEvidence(e.target.value)}\r\n              placeholder=\"Enter manual evidence...\"\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <Box sx={{ display: 'flex', gap: 2 }}>\r\n              <Button \r\n                variant=\"contained\"\r\n                onClick={() => handleSubmitManualEvidence(claim.id)}\r\n              >\r\n                Add Manual Evidence\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\"\r\n                onClick={() => handleAskAI(claim.id)}\r\n                disabled={loadingClaimId === claim.id}\r\n                startIcon={loadingClaimId === claim.id ? <CircularProgress size={20} /> : null}\r\n              >\r\n                {loadingClaimId === claim.id ? 'AI Thinking...' : 'Ask AI'}\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\"\r\n                onClick={() => onAskDocuments(claim.id)}\r\n              >\r\n                Ask Documents\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n\r\n          {claim.evidence && claim.evidence.length > 0 && (\r\n            <>\r\n              <Divider sx={{ my: 2 }} />\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Evidence:\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                {claim.evidence.map((evidence, index) => (\r\n                  <Box \r\n                    key={index} \r\n                    sx={{ \r\n                      p: 2, \r\n                      bgcolor: '#f5f5f5',\r\n                      borderRadius: 1,\r\n                      position: 'relative'\r\n                    }}\r\n                  >\r\n                    <Chip\r\n                      label={evidence.type}\r\n                      size=\"small\"\r\n                      sx={{ \r\n                        position: 'absolute',\r\n                        top: 8,\r\n                        right: 8\r\n                      }}\r\n                    />\r\n                    <Typography variant=\"body2\">\r\n                      {evidence.content}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Paper>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ClaimsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}