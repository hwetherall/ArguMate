{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hweth\\\\OneDrive\\\\Desktop\\\\Innovera\\\\Rapid Prototyping\\\\ArguMate\\\\frontend\\\\src\\\\pages\\\\ClaimsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Container, TextField, Button, Paper, Box, Typography, CircularProgress } from '@mui/material';\nimport { generateClaims, getAIEvidence, getDocumentEvidence, uploadDocument } from '../services/apiClient';\nimport ClaimsList from '../components/ClaimsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClaimsPage() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const companyProfile = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.companyProfile) || {\n    problemStatement: '',\n    productDescription: '',\n    additionalInfo: ''\n  };\n  const [loading, setLoading] = useState(false);\n  const [claims, setClaims] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const handleGenerateClaims = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const generatedClaims = await generateClaims(companyProfile.problemStatement, companyProfile.productDescription);\n      const claimsArray = Array.isArray(generatedClaims) ? generatedClaims : [generatedClaims];\n      setClaims(claimsArray.map((claim, index) => ({\n        id: `claim-${index}`,\n        text: typeof claim === 'string' ? claim : claim.text || 'Invalid claim',\n        type: 'generated',\n        evidence: []\n      })));\n    } catch (error) {\n      alert('Failed to generate claims. Please try again.');\n      console.error('Error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddManualEvidence = (claimId, evidence) => {\n    setClaims(claims.map(claim => claim.id === claimId ? {\n      ...claim,\n      evidence: [...(claim.evidence || []), {\n        type: 'manual',\n        content: evidence\n      }]\n    } : claim));\n  };\n  const handleAskAI = async claimId => {\n    setLoading(true);\n    try {\n      const claim = claims.find(c => c.id === claimId);\n      const evidence = await getAIEvidence(claim.text, companyProfile);\n      setClaims(claims.map(c => c.id === claimId ? {\n        ...c,\n        evidence: [...(c.evidence || []), {\n          type: 'ai',\n          content: evidence\n        }]\n      } : c));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    try {\n      const uploadedDoc = await uploadDocument(file);\n      setDocuments([...documents, uploadedDoc]);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  const handleAskDocuments = async claimId => {\n    if (documents.length === 0) {\n      alert('Please upload documents first');\n      return;\n    }\n    setLoading(true);\n    try {\n      const claim = claims.find(c => c.id === claimId);\n      const evidence = await getDocumentEvidence(claim.text, documents.map(d => d.id));\n      setClaims(claims.map(c => c.id === claimId ? {\n        ...c,\n        evidence: [...(c.evidence || []), {\n          type: 'document',\n          content: evidence\n        }]\n      } : c));\n    } catch (error) {\n      alert(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProceedToSummary = () => {\n    // Check if all claims have evidence\n    const allClaimsHaveEvidence = claims.every(claim => claim.evidence && claim.evidence.length > 0);\n    if (allClaimsHaveEvidence) {\n      navigate('/summary', {\n        state: {\n          claims\n        }\n      });\n    } else {\n      alert('Please provide evidence for all claims before proceeding');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [claims.length === 0 ? /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Generate Claims\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Company Profile Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Problem Statement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), \" \", companyProfile.problemStatement]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Product Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), \" \", companyProfile.productDescription]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), companyProfile.additionalInfo && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          paragraph: true,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Additional Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), \" \", companyProfile.additionalInfo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGenerateClaims,\n        variant: \"contained\",\n        size: \"large\",\n        disabled: loading,\n        sx: {\n          minWidth: 200\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 24\n        }, this) : 'Generate Claims'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Claims Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(ClaimsList, {\n          claims: claims,\n          onAddManualEvidence: handleAddManualEvidence,\n          onAskAI: handleAskAI,\n          onAskDocuments: handleAskDocuments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            bgcolor: '#f5f5f5',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Upload Supporting Documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: \"label\",\n            sx: {\n              mr: 2\n            },\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              hidden: true,\n              accept: \".pdf,.csv\",\n              onChange: handleFileUpload\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), documents.length > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [documents.length, \" document(s) uploaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'flex',\n            justifyContent: 'flex-end'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleProceedToSummary,\n            disabled: loading || !claims.every(claim => {\n              var _claim$evidence;\n              return ((_claim$evidence = claim.evidence) === null || _claim$evidence === void 0 ? void 0 : _claim$evidence.length) > 0;\n            }),\n            size: \"large\",\n            children: \"Proceed to Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(ClaimsPage, \"xNQ/ihxHLGzNUNwobpnPRImPw+A=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ClaimsPage;\nexport default ClaimsPage;\nvar _c;\n$RefreshReg$(_c, \"ClaimsPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Container","TextField","Button","Paper","Box","Typography","CircularProgress","generateClaims","getAIEvidence","getDocumentEvidence","uploadDocument","ClaimsList","jsxDEV","_jsxDEV","ClaimsPage","_s","_location$state","navigate","location","companyProfile","state","problemStatement","productDescription","additionalInfo","loading","setLoading","claims","setClaims","documents","setDocuments","handleGenerateClaims","e","preventDefault","generatedClaims","claimsArray","Array","isArray","map","claim","index","id","text","type","evidence","error","alert","console","handleAddManualEvidence","claimId","content","handleAskAI","find","c","message","handleFileUpload","event","file","target","files","uploadedDoc","handleAskDocuments","length","d","handleProceedToSummary","allClaimsHaveEvidence","every","maxWidth","sx","py","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","paragraph","onClick","size","disabled","minWidth","onAddManualEvidence","onAskAI","onAskDocuments","mt","bgcolor","borderRadius","component","mr","hidden","accept","onChange","color","display","justifyContent","_claim$evidence","_c","$RefreshReg$"],"sources":["C:/Users/hweth/OneDrive/Desktop/Innovera/Rapid Prototyping/ArguMate/frontend/src/pages/ClaimsPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { \r\n  Container, \r\n  TextField, \r\n  Button, \r\n  Paper, \r\n  Box, \r\n  Typography,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { generateClaims, getAIEvidence, getDocumentEvidence, uploadDocument } from '../services/apiClient';\r\nimport ClaimsList from '../components/ClaimsList';\r\n\r\nfunction ClaimsPage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const companyProfile = location.state?.companyProfile || {\r\n    problemStatement: '',\r\n    productDescription: '',\r\n    additionalInfo: ''\r\n  };\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [claims, setClaims] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n\r\n  const handleGenerateClaims = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const generatedClaims = await generateClaims(\r\n        companyProfile.problemStatement, \r\n        companyProfile.productDescription\r\n      );\r\n      \r\n      const claimsArray = Array.isArray(generatedClaims) \r\n        ? generatedClaims \r\n        : [generatedClaims];\r\n\r\n      setClaims(\r\n        claimsArray.map((claim, index) => ({\r\n          id: `claim-${index}`,\r\n          text: typeof claim === 'string' ? claim : claim.text || 'Invalid claim',\r\n          type: 'generated',\r\n          evidence: []\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      alert('Failed to generate claims. Please try again.');\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddManualEvidence = (claimId, evidence) => {\r\n    setClaims(claims.map(claim => \r\n      claim.id === claimId \r\n        ? { ...claim, evidence: [...(claim.evidence || []), { type: 'manual', content: evidence }] }\r\n        : claim\r\n    ));\r\n  };\r\n\r\n  const handleAskAI = async (claimId) => {\r\n    setLoading(true);\r\n    try {\r\n      const claim = claims.find(c => c.id === claimId);\r\n      const evidence = await getAIEvidence(claim.text, companyProfile);\r\n      \r\n      setClaims(claims.map(c => \r\n        c.id === claimId \r\n          ? { ...c, evidence: [...(c.evidence || []), { type: 'ai', content: evidence }] }\r\n          : c\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    try {\r\n      const uploadedDoc = await uploadDocument(file);\r\n      setDocuments([...documents, uploadedDoc]);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAskDocuments = async (claimId) => {\r\n    if (documents.length === 0) {\r\n      alert('Please upload documents first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const claim = claims.find(c => c.id === claimId);\r\n      const evidence = await getDocumentEvidence(claim.text, documents.map(d => d.id));\r\n      \r\n      setClaims(claims.map(c => \r\n        c.id === claimId \r\n          ? { ...c, evidence: [...(c.evidence || []), { type: 'document', content: evidence }] }\r\n          : c\r\n      ));\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProceedToSummary = () => {\r\n    // Check if all claims have evidence\r\n    const allClaimsHaveEvidence = claims.every(claim => \r\n      claim.evidence && claim.evidence.length > 0\r\n    );\r\n\r\n    if (allClaimsHaveEvidence) {\r\n      navigate('/summary', { state: { claims } });\r\n    } else {\r\n      alert('Please provide evidence for all claims before proceeding');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      {claims.length === 0 ? (\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Generate Claims\r\n          </Typography>\r\n          <Box sx={{ mb: 4 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Company Profile Summary\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              <strong>Problem Statement:</strong> {companyProfile.problemStatement}\r\n            </Typography>\r\n            <Typography variant=\"body1\" paragraph>\r\n              <strong>Product Description:</strong> {companyProfile.productDescription}\r\n            </Typography>\r\n            {companyProfile.additionalInfo && (\r\n              <Typography variant=\"body1\" paragraph>\r\n                <strong>Additional Information:</strong> {companyProfile.additionalInfo}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          <Button \r\n            onClick={handleGenerateClaims}\r\n            variant=\"contained\" \r\n            size=\"large\"\r\n            disabled={loading}\r\n            sx={{ minWidth: 200 }}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : 'Generate Claims'}\r\n          </Button>\r\n        </Paper>\r\n      ) : (\r\n        <Box>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Claims Analysis\r\n          </Typography>\r\n          <Paper elevation={3} sx={{ p: 4, mb: 3 }}>\r\n            <ClaimsList\r\n              claims={claims}\r\n              onAddManualEvidence={handleAddManualEvidence}\r\n              onAskAI={handleAskAI}\r\n              onAskDocuments={handleAskDocuments}\r\n            />\r\n            \r\n            <Box sx={{ mt: 3, p: 2, bgcolor: '#f5f5f5', borderRadius: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Upload Supporting Documents\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"label\"\r\n                sx={{ mr: 2 }}\r\n              >\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  hidden\r\n                  accept=\".pdf,.csv\"\r\n                  onChange={handleFileUpload}\r\n                />\r\n              </Button>\r\n              {documents.length > 0 && (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {documents.length} document(s) uploaded\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n              <Button \r\n                variant=\"contained\"\r\n                onClick={handleProceedToSummary}\r\n                disabled={loading || !claims.every(claim => claim.evidence?.length > 0)}\r\n                size=\"large\"\r\n              >\r\n                Proceed to Summary\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      )}\r\n\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ClaimsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}